// Code generated by protoc-gen-go. DO NOT EDIT.
// source: quiz.proto

package quiz

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QuestionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuestionRequest) Reset()         { *m = QuestionRequest{} }
func (m *QuestionRequest) String() string { return proto.CompactTextString(m) }
func (*QuestionRequest) ProtoMessage()    {}
func (*QuestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_quiz_7360f532822f978f, []int{0}
}
func (m *QuestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuestionRequest.Unmarshal(m, b)
}
func (m *QuestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuestionRequest.Marshal(b, m, deterministic)
}
func (dst *QuestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuestionRequest.Merge(dst, src)
}
func (m *QuestionRequest) XXX_Size() int {
	return xxx_messageInfo_QuestionRequest.Size(m)
}
func (m *QuestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuestionRequest proto.InternalMessageInfo

type Question struct {
	Question             string   `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Question) Reset()         { *m = Question{} }
func (m *Question) String() string { return proto.CompactTextString(m) }
func (*Question) ProtoMessage()    {}
func (*Question) Descriptor() ([]byte, []int) {
	return fileDescriptor_quiz_7360f532822f978f, []int{1}
}
func (m *Question) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Question.Unmarshal(m, b)
}
func (m *Question) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Question.Marshal(b, m, deterministic)
}
func (dst *Question) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Question.Merge(dst, src)
}
func (m *Question) XXX_Size() int {
	return xxx_messageInfo_Question.Size(m)
}
func (m *Question) XXX_DiscardUnknown() {
	xxx_messageInfo_Question.DiscardUnknown(m)
}

var xxx_messageInfo_Question proto.InternalMessageInfo

func (m *Question) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *Question) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Answer struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	QuestionId           int32    `protobuf:"varint,2,opt,name=questionId,proto3" json:"questionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_quiz_7360f532822f978f, []int{2}
}
func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (dst *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(dst, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Answer) GetQuestionId() int32 {
	if m != nil {
		return m.QuestionId
	}
	return 0
}

type AnswerCorrect struct {
	Correct              bool     `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	Answer               string   `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerCorrect) Reset()         { *m = AnswerCorrect{} }
func (m *AnswerCorrect) String() string { return proto.CompactTextString(m) }
func (*AnswerCorrect) ProtoMessage()    {}
func (*AnswerCorrect) Descriptor() ([]byte, []int) {
	return fileDescriptor_quiz_7360f532822f978f, []int{3}
}
func (m *AnswerCorrect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerCorrect.Unmarshal(m, b)
}
func (m *AnswerCorrect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerCorrect.Marshal(b, m, deterministic)
}
func (dst *AnswerCorrect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerCorrect.Merge(dst, src)
}
func (m *AnswerCorrect) XXX_Size() int {
	return xxx_messageInfo_AnswerCorrect.Size(m)
}
func (m *AnswerCorrect) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerCorrect.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerCorrect proto.InternalMessageInfo

func (m *AnswerCorrect) GetCorrect() bool {
	if m != nil {
		return m.Correct
	}
	return false
}

func (m *AnswerCorrect) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func init() {
	proto.RegisterType((*QuestionRequest)(nil), "quiz.QuestionRequest")
	proto.RegisterType((*Question)(nil), "quiz.Question")
	proto.RegisterType((*Answer)(nil), "quiz.Answer")
	proto.RegisterType((*AnswerCorrect)(nil), "quiz.AnswerCorrect")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QuizClient is the client API for Quiz service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuizClient interface {
	GetQuestion(ctx context.Context, in *QuestionRequest, opts ...grpc.CallOption) (*Question, error)
	CheckAnswer(ctx context.Context, in *Answer, opts ...grpc.CallOption) (*AnswerCorrect, error)
}

type quizClient struct {
	cc *grpc.ClientConn
}

func NewQuizClient(cc *grpc.ClientConn) QuizClient {
	return &quizClient{cc}
}

func (c *quizClient) GetQuestion(ctx context.Context, in *QuestionRequest, opts ...grpc.CallOption) (*Question, error) {
	out := new(Question)
	err := c.cc.Invoke(ctx, "/quiz.Quiz/getQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quizClient) CheckAnswer(ctx context.Context, in *Answer, opts ...grpc.CallOption) (*AnswerCorrect, error) {
	out := new(AnswerCorrect)
	err := c.cc.Invoke(ctx, "/quiz.Quiz/CheckAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuizServer is the server API for Quiz service.
type QuizServer interface {
	GetQuestion(context.Context, *QuestionRequest) (*Question, error)
	CheckAnswer(context.Context, *Answer) (*AnswerCorrect, error)
}

func RegisterQuizServer(s *grpc.Server, srv QuizServer) {
	s.RegisterService(&_Quiz_serviceDesc, srv)
}

func _Quiz_GetQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuizServer).GetQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/quiz.Quiz/GetQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuizServer).GetQuestion(ctx, req.(*QuestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Quiz_CheckAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Answer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuizServer).CheckAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/quiz.Quiz/CheckAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuizServer).CheckAnswer(ctx, req.(*Answer))
	}
	return interceptor(ctx, in, info, handler)
}

var _Quiz_serviceDesc = grpc.ServiceDesc{
	ServiceName: "quiz.Quiz",
	HandlerType: (*QuizServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getQuestion",
			Handler:    _Quiz_GetQuestion_Handler,
		},
		{
			MethodName: "CheckAnswer",
			Handler:    _Quiz_CheckAnswer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "quiz.proto",
}

func init() { proto.RegisterFile("quiz.proto", fileDescriptor_quiz_7360f532822f978f) }

var fileDescriptor_quiz_7360f532822f978f = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0x85, 0x30,
	0x14, 0x85, 0x1f, 0x04, 0x91, 0x77, 0x51, 0x8c, 0xd7, 0x68, 0x08, 0x83, 0x21, 0x9d, 0x98, 0x18,
	0x30, 0x61, 0x72, 0x21, 0x4c, 0x8e, 0xf4, 0x1f, 0x08, 0x34, 0xda, 0x98, 0x50, 0x29, 0x25, 0x46,
	0x7e, 0xbd, 0xa1, 0x2d, 0x04, 0xdf, 0x76, 0xbe, 0x93, 0x7b, 0x6e, 0x7b, 0x2e, 0xc0, 0x38, 0xf3,
	0x25, 0xff, 0x96, 0x42, 0x09, 0xf4, 0x56, 0x4d, 0xee, 0xe1, 0xae, 0x99, 0xd9, 0xa4, 0xb8, 0x18,
	0x28, 0x1b, 0x57, 0x45, 0x4a, 0x08, 0x36, 0x0b, 0x13, 0x08, 0x46, 0xab, 0x63, 0x27, 0x75, 0xb2,
	0x33, 0xdd, 0x19, 0x23, 0x70, 0x79, 0x1f, 0xbb, 0xa9, 0x93, 0x5d, 0x51, 0x97, 0xf7, 0xe4, 0x15,
	0xfc, 0x6a, 0x98, 0x7e, 0x98, 0x44, 0x04, 0xaf, 0x15, 0xfd, 0xaf, 0x4d, 0x68, 0x8d, 0xcf, 0xeb,
	0xe3, 0x26, 0xf9, 0xb6, 0xa5, 0x0e, 0x0e, 0xa9, 0xe0, 0xd6, 0xa4, 0x6b, 0x21, 0x25, 0xeb, 0x14,
	0xc6, 0x70, 0xdd, 0x19, 0xa9, 0xf7, 0x04, 0x74, 0x43, 0x7c, 0x02, 0xff, 0x5d, 0x8f, 0xea, 0x35,
	0x67, 0x6a, 0xa9, 0x90, 0xe0, 0x35, 0x33, 0x5f, 0xb0, 0x84, 0xf0, 0x83, 0xa9, 0xbd, 0xc3, 0x63,
	0xae, 0x5b, 0x5f, 0xd4, 0x4c, 0xa2, 0xff, 0x36, 0x39, 0x61, 0x01, 0x61, 0xfd, 0xc9, 0xba, 0x2f,
	0xdb, 0xe2, 0xc6, 0x0c, 0x18, 0x4a, 0x1e, 0x8e, 0x64, 0xff, 0x48, 0x4e, 0xad, 0xaf, 0x8f, 0xf9,
	0xf2, 0x17, 0x00, 0x00, 0xff, 0xff, 0x55, 0x39, 0xf8, 0xcb, 0x5a, 0x01, 0x00, 0x00,
}
